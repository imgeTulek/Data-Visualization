<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bar Chart with D3</title>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        svg {
            margin: auto;
            display: block;
        }
        .bar {
            fill: steelblue;
        }
        .bar:hover {
            fill: orange;
        }
        #tooltip {
            position: absolute;
            background-color: white;
            border: 1px solid black;
            padding: 5px;
            display: none;
        }
    </style>
</head>
<body>
    <h1 id="title">US GDP Data</h1>
    <div id="tooltip"></div>
    <svg></svg>

    <script>
        const url = "https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/GDP-data.json";

        // Fetch data and create chart
        fetch(url)
            .then(response => response.json())
            .then(data => createChart(data.data));

        function createChart(data) {
            const width = 800;
            const height = 400;
            const padding = 50;

            const svg = d3.select("svg")
                .attr("width", width)
                .attr("height", height);

            const xScale = d3.scaleTime()
                .domain([new Date(d3.min(data, d => d[0])), new Date(d3.max(data, d => d[0]))])
                .range([padding, width - padding]);

            const yScale = d3.scaleLinear()
                .domain([0, d3.max(data, d => d[1])])
                .range([height - padding, padding]);

            const xAxis = d3.axisBottom(xScale);
            const yAxis = d3.axisLeft(yScale);

            svg.append("g")
                .attr("id", "x-axis")
                .attr("transform", `translate(0, ${height - padding})`)
                .call(xAxis);

            svg.append("g")
                .attr("id", "y-axis")
                .attr("transform", `translate(${padding}, 0)`)
                .call(yAxis);

            svg.selectAll(".bar")
                .data(data)
                .enter()
                .append("rect")
                .attr("class", "bar")
                .attr("x", d => xScale(new Date(d[0])))
                .attr("y", d => yScale(d[1]))
                .attr("width", (width - 2 * padding) / data.length - 1)
                .attr("height", d => height - padding - yScale(d[1]))
                .attr("data-date", d => d[0])
                .attr("data-gdp", d => d[1])
                .on("mouseover", (event, d) => {
                    const tooltip = d3.select("#tooltip");
                    tooltip.style("display", "block")
                        .style("left", event.pageX + 10 + "px")
                        .style("top", event.pageY - 20 + "px")
                        .attr("data-date", d[0])
                        .html(`<strong>Date:</strong> ${d[0]}<br><strong>GDP:</strong> $${d[1]} Billion`);
                })
                .on("mouseout", () => d3.select("#tooltip").style("display", "none"));
        }
    </script>
</body>
</html>
