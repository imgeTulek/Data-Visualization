<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scatterplot Graph</title>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            text-align: center;
            margin: 20px;
        }
        svg {
            margin: auto;
            display: block;
        }
        .dot {
            fill: steelblue;
        }
        .dot.doping {
            fill: orange;
        }
        .dot:hover {
            stroke: black;
            stroke-width: 1.5px;
        }
        #tooltip {
            position: absolute;
            background-color: white;
            border: 1px solid black;
            padding: 5px;
            display: none;
        }
        #legend {
            display: flex;
            justify-content: center;
            margin-top: 20px;
        }
        .legend-item {
            margin: 0 10px;
            display: flex;
            align-items: center;
        }
        .legend-color {
            width: 15px;
            height: 15px;
            margin-right: 5px;
        }
    </style>
</head>
<body>
    <h1 id="title">Doping in Professional Bicycle Racing</h1>
    <h2>35 Fastest times up Alpe d'Huez</h2>
    <div id="tooltip"></div>
    <svg></svg>
    <div id="legend">
        <div class="legend-item">
            <div class="legend-color" style="background-color: steelblue;"></div>
            No doping allegations
        </div>
        <div class="legend-item">
            <div class="legend-color" style="background-color: orange;"></div>
            Riders with doping allegations
        </div>
    </div>

    <script>
        const url = "https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/cyclist-data.json";

        fetch(url)
            .then(response => response.json())
            .then(data => createScatterplot(data));

        function createScatterplot(data) {
            const width = 800;
            const height = 400;
            const padding = 50;

            const svg = d3.select("svg")
                .attr("width", width)
                .attr("height", height);

            const xScale = d3.scaleLinear()
                .domain([d3.min(data, d => d.Year) - 1, d3.max(data, d => d.Year) + 1])
                .range([padding, width - padding]);

            const yScale = d3.scaleTime()
                .domain(d3.extent(data, d => new Date(1970, 0, 1, 0, d.Time.split(':')[0], d.Time.split(':')[1])))
                .range([padding, height - padding]);

            const xAxis = d3.axisBottom(xScale).tickFormat(d3.format("d"));
            const yAxis = d3.axisLeft(yScale).tickFormat(d3.timeFormat("%M:%S"));

            svg.append("g")
                .attr("id", "x-axis")
                .attr("transform", `translate(0, ${height - padding})`)
                .call(xAxis);

            svg.append("g")
                .attr("id", "y-axis")
                .attr("transform", `translate(${padding}, 0)`)
                .call(yAxis);

            svg.selectAll(".dot")
                .data(data)
                .enter()
                .append("circle")
                .attr("class", d => `dot ${d.Doping ? 'doping' : ''}`)
                .attr("cx", d => xScale(d.Year))
                .attr("cy", d => yScale(new Date(1970, 0, 1, 0, d.Time.split(':')[0], d.Time.split(':')[1])))
                .attr("r", 5)
                .attr("data-xvalue", d => d.Year)
                .attr("data-yvalue", d => new Date(1970, 0, 1, 0, d.Time.split(':')[0], d.Time.split(':')[1]))
                .on("mouseover", (event, d) => {
                    const tooltip = d3.select("#tooltip");
                    tooltip.style("display", "block")
                        .style("left", event.pageX + 10 + "px")
                        .style("top", event.pageY - 20 + "px")
                        .attr("data-year", d.Year)
                        .html(`<strong>${d.Name}</strong>: ${d.Nationality}<br>Year: ${d.Year}<br>Time: ${d.Time}<br>${d.Doping ? d.Doping : 'No doping allegations'}`);
                })
                .on("mouseout", () => d3.select("#tooltip").style("display", "none"));
        }
    </script>
</body>
</html>
